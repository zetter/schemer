grammar Schemer
  rule expressions
    (expression ' '?)* {
      def to_ast
        elements.map{|element| element.expression.to_ast}
      end
    }
  end

  rule list
    '(' expressions ')' {
      def to_ast
        Schemer::List.new(expressions.to_ast)
      end
    }
  end

  # A 'S-expression' in the language of the book
  rule expression
    (atom / list)
  end

  rule atom
    [^\ \( \)]+ {
      def to_ast
        Schemer::Atom.new(text_value)
      end
    }
  end
end
